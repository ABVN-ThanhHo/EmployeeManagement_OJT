//@ui5-bundle employeemanagement/Component-preload.js
sap.ui.require.preload({
	"employeemanagement/Component.js":function(){
sap.ui.define(["sap/ui/core/UIComponent","sap/ui/model/json/JSONModel","employeemanagement/model/models"],(e,t,o)=>{"use strict";return e.extend("employeemanagement.Component",{metadata:{manifest:"json",interfaces:["sap.ui.core.IAsyncContentCreation"]},async init(){e.prototype.init.apply(this,arguments);try{const e=await o.createUserModel();this.setModel(e,"userLoginModel")}catch(e){console.error("Failed to load user model:",e);this.setModel(new t({roles:{}}),"userLoginModel")}const a=await o.createMasterDataModel();this.setModel(a,"MasterDataModel");this.getRouter().initialize()}})});
},
	"employeemanagement/controller/App.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],e=>{"use strict";return e.extend("employeemanagement.controller.App",{onInit(){const e=this.getOwnerComponent().getModel("userLoginModel");const t=Object.keys(e.getData().roles||{});if(t.includes("Admin")){this.byId("inputForm")?.setVisible(false)}},onNavToOverview:function(){this.getOwnerComponent().getRouter().navTo("OverviewPage")},onInputForm:function(e){const t=this.getOwnerComponent().getRouter();t.navTo("CreateEmployee")},onEmpList:function(e){const t=this.getOwnerComponent().getRouter();t.navTo("OverviewPage")}})});
},
	"employeemanagement/controller/CreateEmployee.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","../model/models","sap/ui/core/Fragment"],function(e,t,a){"use strict";return e.extend("employeemanagement.controller.CreateEmployee",{onInit:function(){this.getView().setModel(new sap.ui.model.json.JSONModel({avatarSrc:""}),"viewModel");this._validateDobCheck=true;this._validateHireCheck=true},onInputForm:function(e){this.resetForm();const t=this.getOwnerComponent().getRouter();t.navTo("CreateEmployee")},onEmpList:function(e){this.resetForm();const t=this.getOwnerComponent().getRouter();t.navTo("OverviewPage")},onMasterData:function(){this.resetForm();const e=this.getOwnerComponent().getRouter();e.navTo("MasterDataPage")},onAvatarPress:function(){const e=this.byId("fileUploader");e.setValue("");e.getFocusDomRef().click()},onUploadImage:function(e){const t=e.getParameter("files")[0];const a=this.byId("avatar");if(t&&FileReader){const e=new FileReader;e.onload=function(e){a.setSrc(e.target.result)};e.readAsDataURL(t)}},onDeleteImage:function(){const e=this.byId("avatar");e.setSrc("")},onEmailChange:function(e){const t=e.getParameter("value").trim();const a=e.getSource();const s=this._validateEmail(t);if(!s){a.setValueState("Error");a.setValueStateText("Please enter a valid email address.")}else{a.setValueState("None")}},validateDOB:function(e){const t=e.getSource();const a=e.getParameter("value");if(!a){t.setValueState("Error");t.setValueStateText("Date of birth is required.");this._validateDobCheck=false;return}const s=new Date(a);const o=new Date;if(isNaN(s.getTime())){t.setValueState("Error");t.setValueStateText("Invalid date format. Please enter a valid date.");this._validateDobCheck=false;return}let i=o.getFullYear()-s.getFullYear();const r=o.getMonth()-s.getMonth();const n=o.getDate()-s.getDate();if(r<0||r===0&&n<0){i--}if(i<18){t.setValueState("Error");t.setValueStateText("Employee must be at least 18 years old.");this._validateDobCheck=false}else{t.setValueState("None");t.setValueStateText("");this._validateDobCheck=true}},validateHireDate:function(e){const t=e.getSource();const a=e.getParameter("value");if(!a){t.setValueState("Error");t.setValueStateText("Hire Date is required.");this._validateHireCheck=false;return}const s=new Date(a);if(isNaN(s.getTime())){t.setValueState("Error");t.setValueStateText("Invalid Hire Date format.");this._validateHireCheck=false;return}const o=new Date;o.setHours(0,0,0,0);if(s>o){t.setValueState("Error");t.setValueStateText("Hire Date cannot be in the future.");this._validateHireCheck=false}else{t.setValueState("None");t.setValueStateText("");this._validateHireCheck=true}},_validateEmail:function(e){const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return t.test(e)},onValidateEmail:async function(){const e=this.byId("email1").getValue().trim();const t=this.getOwnerComponent().getModel("EmployeeModel");let a=false;try{const s=await t.bindList("/Employees").requestContexts();const o=s.some(t=>{const a=t.getObject();return a.email?.toLowerCase()===e.toLowerCase()});if(o){this.byId("email1").setValueState("Error");this.byId("email1").setValueStateText("This email already exists.");sap.m.MessageToast.show("This email already exists.");a=false;return a}else{this.byId("email1").setValueState("None");a=true;return a}}catch(e){console.error("Failed to read employees",e);sap.m.MessageToast.show("Failed to check existing emails.");a=false;return a}},_validateRequiredFields:function(){const e=this.getView();let t=true;const a=[e.byId("name111"),e.byId("name121"),e.byId("gender1"),e.byId("dob1"),e.byId("department1"),e.byId("wfrom1"),e.byId("role1"),e.byId("email1")];a.forEach(function(e){const a=e.getValue?.()||e.getSelectedKey?.();if(!a){e.setValueState("Error");e.setValueStateText("This field is required");t=false}else{e.setValueState("None")}});return t},onSubmit:async function(){if(!this._validateRequiredFields()){sap.m.MessageToast.show("Please fill all required fields.");return}if(!this._validateDobCheck){sap.m.MessageToast.show("Invalid Date of Birth field.");return}if(!this._validateHireCheck){sap.m.MessageToast.show("Invalid Hire Date field.");return}const e=this.byId("email1").getValue().trim();const t=this._validateEmail(e);if(!t){this.byId("email1").setValueState("Error");this.byId("email1").setValueStateText("Please enter a valid email address.");sap.m.MessageToast.show("Please enter a valid email address.");return}else{this.byId("email1").setValueState("None")}const a=await this.onValidateEmail();if(!a){return}this._openConfirmDialog({title:"Confirm Create",message:"Are you sure you want to create this employee?",state:"Information",confirmText:"Create",cancelText:"Cancel"})},_openConfirmDialog:function(e){if(!this._oConfirmDialog){a.load({id:this.getView().getId(),name:"employeemanagement.view.fragment.ConfirmDialog",controller:this}).then(function(t){this._oConfirmDialog=t;this.getView().addDependent(t);this._setDialogProperties(e);t.open()}.bind(this))}else{this._setDialogProperties(e);this._oConfirmDialog.open()}},_setDialogProperties:function(e){const t=new sap.ui.model.json.JSONModel({dialogTitle:e.title,dialogMessage:e.message,dialogState:e.state,confirmText:e.confirmText,cancelText:e.cancelText});this._oConfirmDialog.setModel(t,"dialog")},_setValidateCheck:function(){this._validateDobCheck=true;this._validateHireCheck=true},onConfirm:function(){this.onConfirmSubmit();this._setValidateCheck()},onCancel:function(){this._oConfirmDialog.close();this._setValidateCheck()},onConfirmSubmit:async function(){const e=this.getView();const t=this.getOwnerComponent().getModel("EmployeeModel");let a=e.byId("role1").getSelectedKey();let s=e.byId("wfrom1").getDateValue();const o=this.getView().getModel("MasterDataModel").getProperty("/roles");const i=o.find(e=>e.ID===a);if(!i){sap.m.MessageBox.information("Selected role not found.");return}const r=parseFloat(i.baseSalary||0);const n=new Date;let l=n.getFullYear()-s.getFullYear();const d=n.getMonth()-s.getMonth();const c=n.getDate()-s.getDate();if(d<0||d===0&&c<0){l--}const u=l*1e3;const m=r+u;const g={firstName:e.byId("name111").getValue(),lastName:e.byId("name121").getValue(),gender:e.byId("gender1").getSelectedKey(),dateOfBirth:e.byId("dob1").getDateValue()?.toISOString().slice(0,10),hireDate:e.byId("wfrom1").getDateValue()?.toISOString().slice(0,10),email:e.byId("email1").getValue(),role_ID:e.byId("role1").getSelectedKey(),salary:m,department_ID:e.byId("department1").getSelectedKey()};try{const e=t.bindList("/Employees");const a=await e.create(g).created();sap.m.MessageToast.show("Employee created successfully");const s=sap.ui.getCore().byId("container-employeemanagement---OverviewPage--employeeTable");if(s){const e=s.getBinding("items");e?.refresh()}this.resetForm();this._oConfirmDialog.close();this.getOwnerComponent().getRouter().navTo("OverviewPage")}catch(e){console.error("Error creating employee:",e);const t=e.details||e.messages;if(t&&Array.isArray(t)){t.forEach(e=>{console.error(`â€¢ ${e.message} (${e.code})`)})}sap.m.MessageBox.error("Failed to create employee:\n"+(t?.map(e=>e.message).join("\n")||e.message))}},resetForm:function(){const e=this.getView();e.byId("name111").setValue("");e.byId("name121").setValue("");e.byId("gender1").setSelectedKey("");e.byId("dob1").setValue("");e.byId("department1").setSelectedKey("");e.byId("wfrom1").setValue("");e.byId("role1").setSelectedKey("");e.byId("email1").setValue("");e.byId("email1").setValueState("None");this.getView().getModel("viewModel").setProperty("/avatarSrc","")},onRoleChange:function(e){const t=e.getSource();const a=t.getValue().trim();const s=t.getItems();let o=false;let i=null;for(let e=0;e<s.length;e++){const t=s[e];if(t.getText().toLowerCase()===a.toLowerCase()){o=true;i=t.getKey();break}}if(o){t.setValueState("None");t.setSelectedKey(i)}else{t.setValueState("Error");t.setValueStateText("Invalid selected. Please choose from the list.");t.setSelectedKey("")}}})});
},
	"employeemanagement/controller/DetailEmployee.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","../model/models","sap/ui/core/Fragment"],function(e,t,a){"use strict";return e.extend("employeemanagement.controller.DetailEmployee",{onInit:function(){const e=this.getOwnerComponent().getRouter();e.getRoute("DetailEmployee").attachPatternMatched(this._onRouteMatched,this);this._bEditMode=false;this._oOriginalData=null;this._validateDobCheck=true;this._validateHireCheck=true},_onRouteMatched:async function(e){const t=e.getParameter("arguments").id;const a=this.getOwnerComponent().getModel("EmployeeModel");const s=`/Employees('${t}')`;try{const e=a.bindContext(s,undefined,{parameters:{$expand:"role,department"}});const t=await e.requestObject();if(t){let e=this.getView().getModel("EmployeeDetail");const a=new sap.ui.model.json.JSONModel(t);this.getView().setModel(a,"EmployeeDetail")}else{sap.m.MessageToast.show("Employee not found.")}}catch(e){console.error("Failed to load employee:",e);sap.m.MessageBox.error("Error loading employee data.")}},onInputForm:function(e){this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false);const t=this.getOwnerComponent().getRouter();t.navTo("CreateEmployee")},onEmpList:function(e){this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false);const t=this.getOwnerComponent().getRouter();t.navTo("OverviewPage")},onMasterData:function(){this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false);const e=this.getOwnerComponent().getRouter();e.navTo("MasterDataPage")},onEditPress:function(){this._bEditMode=true;const e=this.getView();this._oOriginalData=JSON.parse(JSON.stringify(e.getModel("EmployeeDetail").getData()));this._setValidateCheck();this._setInputsEditable(true);this._toggleButtons(true)},_setValidateCheck:function(){this._validateDobCheck=true;this._validateHireCheck=true},onCancelPress:function(){this._bEditMode=false;const e=this.getView();e.getModel("EmployeeDetail").setData(this._oOriginalData);this._setInputsEditable(false);this._toggleButtons(false)},validateDOB:function(e){const t=e.getSource();const a=e.getParameter("value");if(!a){t.setValueState("Error");t.setValueStateText("Date of Birth is required.");this._validateDobCheck=false;return}const s=new Date(a);const o=new Date;if(isNaN(s.getTime())){t.setValueState("Error");t.setValueStateText("Invalid date format. Please enter a valid date.");this._validateDobCheck=false;return}let i=o.getFullYear()-s.getFullYear();const l=o.getMonth()-s.getMonth();const n=o.getDate()-s.getDate();if(l<0||l===0&&n<0){i--}if(i<18){t.setValueState("Error");t.setValueStateText("Employee must be at least 18 years old.");this._validateDobCheck=false}else{t.setValueState("None");t.setValueStateText("");this._validateDobCheck=true}},validateHireDate:function(e){const t=e.getSource();const a=e.getParameter("value");if(!a){t.setValueState("Error");t.setValueStateText("Hire Date is required.");this._validateHireCheck=false;return}const s=new Date(a);if(isNaN(s.getTime())){t.setValueState("Error");t.setValueStateText("Invalid Hire Date format.");this._validateHireCheck=false;return}const o=new Date;o.setHours(0,0,0,0);if(s>o){t.setValueState("Error");t.setValueStateText("Hire Date cannot be in the future.");this._validateHireCheck=false}else{t.setValueState("None");t.setValueStateText("");this._validateHireCheck=true}},_validateRequiredFields:function(){const e=this.getView();let t=true;const a=[e.byId("name"),e.byId("name2"),e.byId("gender"),e.byId("dob"),e.byId("department"),e.byId("hireDate"),e.byId("role"),e.byId("email")];a.forEach(function(e){const a=e.getValue?.()||e.getSelectedKey?.();if(!a){e.setValueState("Error");e.setValueStateText("This field is required");t=false}else{e.setValueState("None")}});return t},onEmailChange:function(e){const t=e.getParameter("value").trim();const a=e.getSource();const s=this._validateEmail(t);if(!s){a.setValueState("Error");a.setValueStateText("Please enter a valid email address.")}else{a.setValueState("None")}},_validateEmail:function(e){const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return t.test(e)},onValidateEmail:async function(){const e=this.byId("email").getValue().trim();const t=this.getView().getModel("EmployeeDetail");const a=t.getProperty("/ID");const s=this.getOwnerComponent().getModel("EmployeeModel");let o=false;try{const t=await s.bindList("/Employees").requestContexts();const i=t.some(t=>{const s=t.getObject();return s.email?.toLowerCase()===e.toLowerCase()&&s.ID!==a});if(i){this.byId("email").setValueState("Error");this.byId("email").setValueStateText("This email already exists.");sap.m.MessageToast.show("This email already exists.");o=false;return o}else{this.byId("email").setValueState("None");o=true;return o}}catch(e){console.error("Failed to read employees",e);sap.m.MessageToast.show("Failed to check existing emails.");o=false;return o}},onUpdatePress:async function(){const e=this.getView();const t=this._validateRequiredFields();if(!t){sap.m.MessageToast.show("Please fill all required fields.");return}if(!this._validateDobCheck){sap.m.MessageToast.show("Invalid Date of Birth field.");return}if(!this._validateHireCheck){sap.m.MessageToast.show("Invalid Hire Date field.");return}const a=e.byId("email").getValue().trim();const s=this._validateEmail(a);if(!s){const t=e.byId("email");t.setValueState("Error");t.setValueStateText("Please enter a valid email address.");sap.m.MessageToast.show("Please enter a valid email address.");return}else{e.byId("email").setValueState("None")}const o=await this.onValidateEmail();if(!o){return}this.onCalculateSalary();this._openConfirmDialog({title:"Confirm Update",message:"Are you sure you want to update this employee?",state:"Information",confirmText:"Update",cancelText:"Cancel"})},_openConfirmDialog:function(e){if(!this._oConfirmDialog){a.load({id:this.getView().getId(),name:"employeemanagement.view.fragment.ConfirmDialog",controller:this}).then(function(t){this._oConfirmDialog=t;this.getView().addDependent(t);this._setDialogProperties(e);t.open()}.bind(this))}else{this._setDialogProperties(e);this._oConfirmDialog.open()}},_setDialogProperties:function(e){const t=new sap.ui.model.json.JSONModel({dialogTitle:e.title,dialogMessage:e.message,dialogState:e.state,confirmText:e.confirmText,cancelText:e.cancelText});this._oConfirmDialog.setModel(t,"dialog")},_handleEmployeeUpdate:async function(){const e=this.getView();const t=e.getModel("EmployeeDetail");const a=t.getData();const s=a.ID;if(!s){throw new Error("Employee ID is required.")}delete a.ID;delete a.createdAt;delete a.__metadata;delete a.departmentName;delete a.roleName;delete a.createdBy;delete a.modifiedAt;delete a.modifiedBy;if(a.dateOfBirth){const e=new Date(a.dateOfBirth);if(!isNaN(e)){a.dateOfBirth=e.toISOString().slice(0,10)}else{console.warn("Invalid dateOfBirth:",a.dateOfBirth)}}if(a.hireDate){const e=new Date(a.hireDate);if(!isNaN(e)){a.hireDate=e.toISOString().slice(0,10)}else{console.warn("Invalid hireDate:",a.hireDate)}}try{const e=`/odata/v4/employee/Employees('${s}')`;const t=await fetch(e,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!t.ok){const e=await t.text();throw new Error(`Update failed (${t.status}): ${e}`)}sap.m.MessageToast.show("Employee updated successfully");const o=sap.ui.getCore().byId("container-employeemanagement---OverviewPage--employeeTable");if(o){const e=o.getBinding("items");e?.refresh()}}catch(e){console.error("Failed to update employee:",e);sap.m.MessageBox.error("Failed to update employee:\n"+(e.message||""))}this._refreshEmployeeDetail(s);this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false)},onConfirm:function(){this._handleEmployeeUpdate();this._oConfirmDialog.close()},onCancel:function(){this._oConfirmDialog.close()},_setInputsEditable:function(e){const t=this.getView();["name","name2","dob","gender","department","hireDate","role","email"].forEach(a=>{const s=t.byId(a);if(s&&s.setEditable){s.setEditable(e)}})},_toggleButtons:function(e){const t=this.getView();t.byId("btnEdit").setVisible(!e);t.byId("btnUpdate").setVisible(e);t.byId("btnCancel").setVisible(e);t.byId("btnCalculateSalary").setEnabled(e)},_refreshEmployeeDetail:async function(e){try{const t=this.getView();const a=t.getModel("EmployeeModel");const s=`/Employees('${e}')`;const o=a.bindContext(s);const i=await o.requestObject();t.getModel("EmployeeDetail").setData(i)}catch(e){console.error("Failed to refresh employee details",e);sap.m.MessageBox.error("Failed to refresh employee details.")}},onRoleChange:function(e){const t=e.getSource();const a=t.getValue().trim();const s=t.getItems();let o=false;let i=null;for(let e=0;e<s.length;e++){const t=s[e];if(t.getText().toLowerCase()===a.toLowerCase()){o=true;i=t.getKey();break}}if(o){t.setValueState("None");t.setSelectedKey(i)}else{t.setValueState("Error");t.setValueStateText("Invalid selected. Please choose from the list.");t.setSelectedKey("")}},onCalculateSalary:function(){const e=this.getView();const t=e.byId("role");const a=e.byId("hireDate");const s=t.getSelectedKey();const o=a.getDateValue();if(!s||!o){sap.m.MessageBox.information("Please select a role and hire date.");return}const i=this.getView().getModel("MasterDataModel").getProperty("/roles");const l=i.find(e=>e.ID===s);if(!l){sap.m.MessageBox.information("Selected role not found.");return}const n=parseFloat(l.baseSalary||0);const r=new Date;let d=r.getFullYear()-o.getFullYear();const c=r.getMonth()-o.getMonth();const u=r.getDate()-o.getDate();if(c<0||c===0&&u<0){d--}const h=d*1e3;const g=n+h;const m=this.getView().getModel("EmployeeDetail");m.setProperty("/salary",g.toFixed(2))}})});
},
	"employeemanagement/controller/NotFound.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller"],function(e){"use strict";return e.extend("employeemanagement.controller.NotFound",{onNavHome:function(){this.getOwnerComponent().getRouter().navTo("OverviewPage")}})});
},
	"employeemanagement/controller/OverviewPage.controller.js":function(){
sap.ui.define(["sap/ui/core/mvc/Controller","sap/m/MessageBox","sap/m/MessageToast","sap/ui/core/Fragment","../model/models"],(e,t,o,n,i)=>{"use strict";return e.extend("employeemanagement.controller.OverviewPage",{onInit(){const e=this.getView();const t=this.getOwnerComponent().getModel("userLoginModel");const o=Object.keys(t.getData().roles||{});if(!o.includes("Admin")){this.byId("actionColumn")?.setVisible(false);this.byId("_IDGenHBox2")?.setVisible(false);this.byId("_IDGenColumnListItem").setType("Inactive")}const n=e.getModel("MasterDataModel");if(!n){setTimeout(()=>this.onInit(),100);return}const i=n.getData();const l=JSON.parse(JSON.stringify(i.roles||[]));const s=JSON.parse(JSON.stringify(i.departments||[]));l.unshift({ID:"All",name:"All"});s.unshift({ID:"All",name:"All"});const r=new sap.ui.model.json.JSONModel({roles:l,departments:s,selectedRole:"All",selectedDepartment:"All"});e.setModel(r,"FilterModel")},onItemPress:function(e){const t=this.getOwnerComponent().getRouter();const o=e.getSource();const n=o.getBindingContext("EmployeeModel");if(!n){console.error("No binding context found for EmployeeModel");return}const i=n.getObject();if(!i||!i.ID){console.error("Employee ID not found");return}t.navTo("DetailEmployee",{id:i.ID})},onInputForm:function(e){const t=this.getOwnerComponent().getRouter();t.navTo("CreateEmployee")},onEmpList:function(e){const t=this.getOwnerComponent().getRouter();t.navTo("OverviewPage")},onMasterData:function(){const e=this.getOwnerComponent().getRouter();e.navTo("MasterDataPage")},onDeleteEmployeePress:function(e){this._oDeleteContext=e.getSource().getParent().getBindingContext("EmployeeModel");this._openConfirmDialog({title:"Confirm Delete Employee",message:"Are you sure you want to delete this employee?",state:"Information",confirmText:"Delete",cancelText:"Cancel"})},_openConfirmDialog:function(e){if(!this._oConfirmDialog){n.load({id:this.getView().getId(),name:"employeemanagement.view.fragment.ConfirmDialog",controller:this}).then(function(t){this._oConfirmDialog=t;this.getView().addDependent(this._oConfirmDialog);this._setDialogProperties(e);t.open()}.bind(this))}else{this._setDialogProperties(e);this._oConfirmDialog.open()}},_setDialogProperties:function(e){const t=new sap.ui.model.json.JSONModel({dialogTitle:e.title,dialogMessage:e.message,dialogState:e.state,confirmText:e.confirmText,cancelText:e.cancelText});this._oConfirmDialog.setModel(t,"dialog")},onConfirm:async function(){if(!this._oDeleteContext){t.error("No employee selected for deletion.");this._oConfirmDialog.close();return}const e=this.getView().getModel("EmployeeModel");let n=this._oDeleteContext.getPath();let i=e.getGroupId();try{const t=await e.delete(n,i,true);o.show("Employee deleted successfully.");this._oConfirmDialog.close()}catch(e){console.error("Delete failed",e);sap.m.MessageBox.error("Failed to delete employee.");this._oConfirmDialog.close()}},onCancel:function(){o.show("Delete canceled");this._oConfirmDialog.close()},onFilterChange:function(){const e=this.getView();const t=e.byId("employeeTable");const o=e.getModel("FilterModel");console.log(o);const n=e.byId("levelFilter").getSelectedKey();const i=e.byId("levelFilter2").getSelectedKey();const l=[];if(n&&n!=="All"){l.push(new sap.ui.model.Filter("role_ID","EQ",n))}if(i&&i!=="All"){l.push(new sap.ui.model.Filter("department_ID","EQ",i))}const s=t.getBinding("items");if(s){s.filter(l)}}})});
},
	"employeemanagement/i18n/i18n.properties":'# This is the resource bundle for employeemanagement\n\n#Texts for manifest.json\n\n#XTIT: Application name\nappTitle=Employee Management\n\n#YDES: Application description\nappDescription=An SAP Fiori application.\n#XTIT: Main view title\ntitle=Employee Management\n\n#Employee Overview\nempList=Employee List\ndepartment=Department\nfirstName=First Name\nlastName=Last Name\nrole=Role\nemail=Email\nlevel=Level\ngender=Gender\ndob=Date of Birth\nhireDate=Hire Date\ninputForm=Input Form\nmale=Male\nfemale=Female\nother=Other\nMale=Male\nFemale=Female\nOther=Other\nsubmit=Submit\nviewDetails=View Detail Employee\ndelete=Delete Employee\naction=Action\nall=All\nsalary=Salary\n\n#Button\nupdate=Update\ncancel=Cancel\nedit=Edit\nmasterData=Master Data\ncalSalary=Calculate Salary\n\n#Master Data Page\nrol=Roles\ndept=Departments\nid=ID\nname=Name\nbaseSalary=Base Salary\n\n#Not Found Page\nbackHome=Back to Home\nnotFoundMessage=The requested page could not be found.\nnotF=Page Not Found',
	"employeemanagement/manifest.json":'{"_version":"1.65.0","sap.app":{"id":"employeemanagement","type":"application","i18n":"i18n/i18n.properties","applicationVersion":{"version":"0.0.1"},"title":"{{appTitle}}","description":"{{appDescription}}","resources":"resources.json","sourceTemplate":{"id":"@sap/generator-fiori:basic","version":"1.18.1","toolsId":"d22988a0-da38-4d19-a68d-75c4c148a6f3"},"dataSources":{"mainService":{"uri":"/odata/v4/employee/","type":"OData","settings":{"annotations":[],"odataVersion":"4.0"}}}},"sap.ui":{"technology":"UI5","icons":{"icon":"","favIcon":"","phone":"","phone@2":"","tablet":"","tablet@2":""},"deviceTypes":{"desktop":true,"tablet":true,"phone":true}},"sap.ui5":{"flexEnabled":true,"dependencies":{"minUI5Version":"1.136.2","libs":{"sap.m":{},"sap.ui.core":{}}},"contentDensities":{"compact":true,"cozy":true},"models":{"i18n":{"type":"sap.ui.model.resource.ResourceModel","settings":{"bundleName":"employeemanagement.i18n.i18n"}},"":{"dataSource":"mainService","preload":true,"settings":{"operationMode":"Server","autoExpandSelect":true,"earlyRequests":true},"type":"sap.ui.model.odata.v4.ODataModel"},"EmployeeModel":{"dataSource":"mainService","settings":{"synchronizationMode":"None","operationMode":"Server","autoExpandSelect":true},"type":"sap.ui.model.odata.v4.ODataModel"},"userLoginModel":{"type":"sap.ui.model.json.JSONModel","uri":"","settings":{}}},"resources":{"css":[{"uri":"css/style.css"}]},"routing":{"config":{"routerClass":"sap.m.routing.Router","controlAggregation":"pages","controlId":"app","transition":"slide","type":"View","viewType":"XML","path":"employeemanagement.view","async":true,"viewPath":"employeemanagement.view","bypassed":{"target":["NotFound"]}},"routes":[{"name":"OverviewPage","pattern":"","target":"OverviewPage"},{"name":"CreateEmployee","pattern":"create","target":"CreateEmployee"},{"name":"DetailEmployee","pattern":"detail/{id}","target":"DetailEmployee"},{"name":"MasterDataPage","pattern":"masterData","target":"MasterDataPage"}],"targets":{"OverviewPage":{"id":"OverviewPage","name":"OverviewPage"},"CreateEmployee":{"id":"CreateEmployee","name":"CreateEmployee"},"DetailEmployee":{"id":"DetailEmployee","name":"DetailEmployee"},"MasterDataPage":{"id":"MasterDataPage","name":"MasterDataPage"},"NotFound":{"id":"NotFound","name":"NotFound"}}},"rootView":{"viewName":"employeemanagement.view.App","type":"XML","id":"App","async":true}},"sap.cloud":{"public":true,"service":"employeeManagement_OJT"}}',
	"employeemanagement/model/models.js":function(){
sap.ui.define(["sap/ui/model/json/JSONModel","sap/ui/model/odata/v4/ODataModel","sap/ui/Device"],function(e,o,t){"use strict";return{createEmployeeModel:function(){return new o({serviceUrl:"/odata/v4/employee/",synchronizationMode:"None",operationMode:"Server",updateGroupId:"employeeUpdateGroup",autoExpandSelect:true})},createMasterDataModel:async function(){const o=new e({departments:[],roles:[]});try{const[e,t]=await Promise.all([fetch("/odata/v4/employee/Departments"),fetch("/odata/v4/employee/Roles")]);if(!e.ok||!t.ok){throw new Error("Failed to fetch master data.")}const a=await e.json();const n=await t.json();o.setData({departments:a.value,roles:n.value});o.setDefaultBindingMode(sap.ui.model.BindingMode.OneWay)}catch(e){console.error("Error loading master data:",e)}return o},_setModel:function(o,t,a){o.setModel(new e(t),a)},_getModel:function(e,o){let t=e.getModel(o);return t},createEmployee:async function(e){const o=sap.ui.getCore().getModel("EmployeeModel");await o.create("/Employees",e,{groupId:"employeeUpdateGroup"})},createUserModel:function(){return new Promise(function(o,t){var a=new e;$.ajax({url:"/odata/v4/employee/me",method:"GET",success:function(e){a.setData(e);o(a)},error:function(e){console.error("Failed to load user info",e);t(e)}})})}}});
},
	"employeemanagement/view/App.view.xml":'<mvc:View controllerName="employeemanagement.controller.App"\n    displayBlock="true"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"><App id="app"></App></mvc:View>',
	"employeemanagement/view/CreateEmployee.view.xml":'<mvc:View controllerName="employeemanagement.controller.CreateEmployee"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:f="sap.ui.layout.form"\n  xmlns:u="sap.ui.unified"\n  xmlns:core="sap.ui.core"><Page id="_IDGenPage1" title="Create Employee" class="Page"><customHeader><core:Fragment fragmentName="employeemanagement.view.fragment.Header" type="XML" /></customHeader><content><HBox id="_IDGenHBox1" class="content"><VBox id="_IDGenVBox4" class="responsiveVBox"><f:SimpleForm id="form1" title="{i18n>empList}"><VBox id="_IDGenVBox11" alignItems="Center"><Avatar id="avatar" displayShape="Circle" displaySize="L" fallbackIcon="sap-icon://employee" press="onAvatarPress" class="clickableAvatar" /><Button id="btnDeleteImage" icon="sap-icon://decline" type="Transparent" press="onDeleteImage" /><u:FileUploader id="fileUploader" visible="true" uploadOnChange="false" change="onUploadImage" fileType="jpg,png,jpeg" name="avatarUploader" class="hiddenUploader" /></VBox><Label id="name11" required="true" text="{i18n>firstName}" /><Input id="name111" placeholder="{i18n>firstName}" required="true" /><Label id="name12" required="true" text="{i18n>lastName}" /><Input id="name121" placeholder="{i18n>lastName}" required="true" /><Label id="dob_label1" required="true" text="{i18n>dob}" /><DatePicker id="dob1" change="validateDOB" displayFormat="yyy-MM-dd" valueFormat="yyy-MM-dd" placeholder="e.g. 25-12-2002" editable="true" /><Label id="gender_label1" required="true" text="{i18n>gender}" /><ComboBox id="gender1" required="true" placeholder="{i18n>gender}" change="onRoleChange" width="100%"><items><core:Item id="_IDGenItem3" key="male" text="{i18n>Male}"/><core:Item id="_IDGenItem4" key="female" text="{i18n>Female}"/><core:Item id="_IDGenItem5" key="other" text="{i18n>Other}"/></items></ComboBox><Label id="department_label1" required="true" text="{i18n>department}" /><ComboBox id="department1" placeholder="{i18n>department}" required="true" change="onRoleChange" items="{\n                                            path: \'MasterDataModel>/departments\',\n                                            sorter: { path: \'name\' }\n                                        }" selectedKey="{MasterDataModel>ID}"><core:Item id="_IDGenItem12" key="{MasterDataModel>ID}" text="{MasterDataModel>name}" /></ComboBox><Label id="wfrom_label1" required="true" text="{i18n>hireDate}" /><DatePicker id="wfrom1" change="validateHireDate" displayFormat="yyy-MM-dd" valueFormat="yyy-MM-dd" placeholder="e.g. 25-12-2020" value="" editable="true" /><Label id="level_label1" required="true" text="{i18n>role}" /><ComboBox id="role1" placeholder="{i18n>role}" required="true" change="onRoleChange" items="{\n                                            path: \'MasterDataModel>/roles\',\n                                            sorter: { path: \'name\' }\n                                        }" selectedKey="{MasterDataModel>ID}"><core:Item id="_IDGenItem1" key="{MasterDataModel>ID}" text="{MasterDataModel>name}" /></ComboBox><Label id="email_label1" required="true" text="{i18n>email}" /><Input id="email1" placeholder="{i18n>email}" required="true" change="onEmailChange" /><VBox id="button1" width="100%" alignItems="End"><Button id="_IDGenButton11" text="{i18n>submit}" press="onSubmit" class="customButtonPrimary sapUiTinyMarginBegin"/></VBox></f:SimpleForm></VBox></HBox></content></Page></mvc:View>\n',
	"employeemanagement/view/DetailEmployee.view.xml":'<mvc:View controllerName="employeemanagement.controller.DetailEmployee"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:f="sap.ui.layout.form"\n  xmlns:u="sap.ui.unified"\n  xmlns:core="sap.ui.core"\n  xmlns:upload="sap.m.upload"><Page id="_IDGenPage" title="Detail Employee" class="Page"><customHeader><core:Fragment fragmentName="employeemanagement.view.fragment.Header" type="XML" /></customHeader><content><HBox class="content"><VBox class="responsiveVBox"><f:SimpleForm id="form" title="{i18n>empList}"><VBox id="_IDGenVBox9" alignItems="Center"><Avatar id="uploadAvatar" displayShape="Circle" displaySize="L" initials="AU" class="sapUiSmallMarginEnd" src="img/Avatar.png"/></VBox><Label id="name1" required="true" text="{i18n>firstName}" /><Input id="name" required="true" placeholder="Name" editable="false" value="{EmployeeDetail>/firstName}" /><Label id="name13" required="true" text="{i18n>lastName}" /><Input id="name2" required="true" placeholder="Name" editable="false" value="{EmployeeDetail>/lastName}" /><Label id="dob_label" required="true" text="{i18n>dob}" /><DatePicker id="dob" required="true" change="validateDOB" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd" editable="false" value="{EmployeeDetail>/dateOfBirth}" /><Label id="gender_label" required="true" text="{i18n>gender}" /><ComboBox id="gender" required="true" editable="false" width="100%" change="onRoleChange" value="{EmployeeDetail>/gender}" selectedKey="{EmployeeDetail>/gender}"><items><core:Item id="_IDGenItem13" key="male" text="{i18n>Male}"/><core:Item id="_IDGenItem14" key="female" text="{i18n>Female}"/><core:Item id="_IDGenItem15" key="other" text="{i18n>Other}"/></items></ComboBox><Label id="department_label" required="true" text="{i18n>department}" /><ComboBox id="department" editable="false" required="true" change="onRoleChange" value="{EmployeeDetail>/departmentName}" items="{\n                                            path: \'MasterDataModel>/departments\',\n                                            sorter: { path: \'name\' }\n                                        }" selectedKey="{EmployeeDetail>/department_ID}"><core:Item id="_IDGenItem122" key="{MasterDataModel>ID}" text="{MasterDataModel>name}" /></ComboBox><Label id="wfrom_label" required="true" text="{i18n>hireDate}" /><DatePicker id="hireDate" required="true" change="validateHireDate" displayFormat="yyyy-MM-dd" valueFormat="yyyy-MM-dd" editable="false" value="{EmployeeDetail>/hireDate}" /><HBox id="_IDGenHBox3" width="100%" justifyContent="SpaceBetween"><VBox id="_IDGenVBox6" width="80%"><Label id="role_label" required="true" text="{i18n>role}" /><ComboBox id="role" width="100%" editable="false" required="true" value="{EmployeeDetail>/roleName}" change="onRoleChange" items="{\n                                            path: \'MasterDataModel>/roles\',\n                                            sorter: { path: \'name\' }\n                                        }" selectedKey="{EmployeeDetail>/role_ID}"><core:Item id="_IDGenItem31" key="{MasterDataModel>ID}" text="{MasterDataModel>name}" /></ComboBox></VBox><VBox id="_IDGenVBox5"><Label id="cal_label" text="" /><Button id="btnCalculateSalary" text="{i18n>calSalary}" class="customButtonPrimary sapUiTinyMarginBegin" enabled="false" press="onCalculateSalary" visible="true"/></VBox></HBox><Label id="salary_label" text="{i18n>salary}" /><Input id="salary" editable="false" value="{= \'$\' + ${EmployeeDetail>/salary} }" /><Label id="email_label" required="true" text="{i18n>email}" /><Input id="email" required="true" editable="false" value="{EmployeeDetail>/email}" change="onEmailChange"/><HBox id="button" width="100%" justifyContent="End"><Button id="btnEdit" text="{i18n>edit}" class="customButtonPrimary" press="onEditPress" visible="true"/><Button id="btnUpdate" text="{i18n>update}" class="customButtonPrimary sapUiTinyMarginEnd" press="onUpdatePress" visible="false"/><Button id="btnCancel" text="{i18n>cancel}" class="customButtonPrimary" press="onCancelPress" visible="false"/></HBox></f:SimpleForm></VBox></HBox></content></Page></mvc:View>\n',
	"employeemanagement/view/MasterDataPage.view.xml":'<mvc:View controllerName="employeemanagement.controller.App"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"\n    xmlns:cards="sap.f.cards"><Page id="_IDGenPage2" title="{i18n>title}" class="Page"><customHeader><core:Fragment id="_IDGenFragment1" fragmentName="employeemanagement.view.fragment.Header" type="XML" /></customHeader><content><HBox id="table_box1" class="content"><VBox width="85%"><f:SimpleForm id="_IDGenSimpleForm1" editable="true" class="sapUiMediumMarginBottom"><f:content><Table items="{MasterDataModel>/departments}" noDataText="No Data" ><headerToolbar><OverflowToolbar id="_IDGenOverflowToolbar1" class="tableHeader"><content><Title id="_IDGenTitle1" text="{i18n>dept}" level="H3"/><ToolbarSpacer id="_IDGenToolbarSpacer1" /></content></OverflowToolbar></headerToolbar><columns><Column><Text text="{i18n>id}"/></Column><Column><Text text="{i18n>name}"/></Column></columns><items><ColumnListItem><cells><Text text="{MasterDataModel>ID}"/><Text text="{MasterDataModel>name}"/></cells></ColumnListItem></items></Table></f:content></f:SimpleForm><f:SimpleForm id="_IDGenSimpleForm2" editable="true"><f:content><Table items="{MasterDataModel>/roles}"><headerToolbar><OverflowToolbar id="_IDGenOverflowToolbar2" class="tableHeader"><content><Title id="_IDGenTitle2" text="{i18n>rol}" level="H3"/><ToolbarSpacer id="_IDGenToolbarSpacer2" /></content></OverflowToolbar></headerToolbar><columns><Column><Text text="{i18n>id}"/></Column><Column><Text text="{i18n>name}"/></Column><Column><Text text="{i18n>baseSalary}"/></Column></columns><items><ColumnListItem><cells><Text text="{MasterDataModel>ID}"/><Text text="{MasterDataModel>name}"/><Text text="{MasterDataModel>baseSalary}"/></cells></ColumnListItem></items></Table></f:content></f:SimpleForm></VBox></HBox></content></Page></mvc:View>\n',
	"employeemanagement/view/NotFound.view.xml":'<mvc:View controllerName="employeemanagement.controller.NotFound"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns="sap.m"\n  xmlns:core="sap.ui.core"><Page id="_IDGenPage3" showHeader="false" class="Page"><content><VBox id="_IDGenVBox8" class="notFoundWrapper" alignItems="Center" justifyContent="Center" width="100%"><core:Icon id="_IDGenIcon" src="sap-icon://error" size="4rem" color="#ff7e8c" class="sapUiTinyMarginBottom" /><Title id="_IDGenTitle3" text="{i18n>notF}" level="H1" /><Text id="_IDGenText4" text="{i18n>notFoundMessage}" class="sapUiSmallMarginBottom" /><Button id="_IDGenButton" text="{i18n>backHome}" class="customButtonPrimary" press="onNavHome" /></VBox></content></Page></mvc:View>\n',
	"employeemanagement/view/OverviewPage.view.xml":'<mvc:View controllerName="employeemanagement.controller.OverviewPage"\n    xmlns:mvc="sap.ui.core.mvc"\n    xmlns="sap.m"\n    xmlns:f="sap.ui.layout.form"\n    xmlns:core="sap.ui.core"\n    xmlns:cards="sap.f.cards"><Page id="page" title="{i18n>title}" class="Page"><customHeader><core:Fragment id="_IDGenFragment" fragmentName="employeemanagement.view.fragment.Header" type="XML" /></customHeader><content><HBox id="table_box" class="content"><VBox id="_IDGenVBox2" width="85%"><f:SimpleForm id="_IDGenSimpleForm" layout="ResponsiveGridLayout" editable="true"><f:content><VBox id="_IDGenVBox1"><HBox id="_IDGenHBox" alignItems="Center" justifyContent="End"><VBox id="_IDGenVBox3" class="sapUiSmallMarginEnd"><Label id="_IDGenLabel1" text="{i18n>role}" /><ComboBox id="levelFilter" selectionChange="onFilterChange" class="filterInput" items="{\n                                            path: \'FilterModel>/roles\',\n                                            sorter: { path: \'name\' }\n                                        }" selectedKey="{FilterModel>/roles>/ID}"><core:Item id="_IDGenItem" key="{FilterModel>ID}" text="{FilterModel>name}" /></ComboBox></VBox><VBox id="_IDGenVBox"><Label id="_IDGenLabel" text="{i18n>department}" /><ComboBox id="levelFilter2" selectionChange="onFilterChange" class="filterInput" items="{\n                                            path: \'FilterModel>/departments\',\n                                            sorter: { path: \'name\' }\n                                        }" selectedKey="{FilterModel>/departments>/ID}"><core:Item id="_IDGenItem2" key="{FilterModel>ID}" text="{FilterModel>name}" /></ComboBox></VBox></HBox><VBox id="_IDGenVBox7" width="100%" class="responsiveTableWrapperHorizontal"><Table id="employeeTable" items="{\n                                        path: \'EmployeeModel>/Employees\',\n                                        parameters: {\n                                        $expand: \'role,department\'\n                                        }\n                                    }" growing="true" growingScrollToLoad="true" class="table" inset="false" width="100%" noDataText="No Data"><headerToolbar><OverflowToolbar id="_IDGenOverflowToolbar" class="tableHeader"><content><Title id="_IDGenTitle" text="{i18n>empList}" level="H3"/><ToolbarSpacer id="_IDGenToolbarSpacer" /></content></OverflowToolbar></headerToolbar><columns><Column id="_IDGenColumn"><Text id="_IDGenText" text="{i18n>firstName}"/></Column><Column id="_IDGenColumn1"><Text id="_IDGenText1" text="{i18n>lastName}"/></Column><Column id="_IDGenColumn2"><Text id="_IDGenText2" text="{i18n>email}"/></Column><Column id="_IDGenColumn3"><Text id="_IDGenText3" text="{i18n>role}"/></Column><Column id="_IDGenColumn6"><Text id="_IDGenText6" text="{i18n>hireDate}"/></Column><Column id="_IDGenColumn7"><Text id="_IDGenText7" text="{i18n>department}"/></Column><Column id="actionColumn" visible="true"><Text id="_IDGenText10" text="{i18n>action}" /></Column></columns><items><ColumnListItem id="_IDGenColumnListItem" type="Navigation" vAlign="Middle" press="onItemPress"><cells><Text id="_IDGenText8" text="{EmployeeModel>firstName}"/><Text id="_IDGenText16" text="{EmployeeModel>lastName}"/><Text id="_IDGenText9" text="{EmployeeModel>email}"/><Text id="_IDGenText15" text="{EmployeeModel>roleName}"/><Text id="_IDGenText13" text="{EmployeeModel>hireDate}"/><Text id="_IDGenText14" text="{EmployeeModel>departmentName}"/><HBox id="_IDGenHBox2" visible="true"><Button id="editButton" icon="sap-icon://display" tooltip="{i18n>viewDetails}" press="onItemPress" class="customButtonSecondary" type="Transparent"/><Button id="deleteButton" icon="sap-icon://delete" tooltip="{i18n>delete}" press="onDeleteEmployeePress" class="customButtonPrimary sapUiTinyMarginBegin" type="Transparent"/></HBox></cells></ColumnListItem></items></Table></VBox></VBox></f:content></f:SimpleForm></VBox></HBox></content></Page></mvc:View>',
	"employeemanagement/view/fragment/ConfirmDialog.fragment.xml":'<core:FragmentDefinition controllerName="employeemanagement.controller.CreateEmployee"\n  xmlns="sap.m"\n  xmlns:core="sap.ui.core"><Dialog id="confirmDialog" title="{dialog>/dialogTitle}" type="Message" state="{dialog>/dialogState}" draggable="true" resizable="false" afterClose="onDialogAfterClose"><Text text="{dialog>/dialogMessage}" /><beginButton><Button text="{dialog>/confirmText}" press="onConfirm" class="customButtonPrimary sapUiTinyMarginBegin"/></beginButton><endButton><Button text="{dialog>/cancelText}" press="onCancel" class="customButtonSecondary"/></endButton></Dialog></core:FragmentDefinition>\n',
	"employeemanagement/view/fragment/Header.fragment.xml":'<core:FragmentDefinition controllerName="employeemanagement.controller.OverviewPage"\n  xmlns:mvc="sap.ui.core.mvc"\n  xmlns="sap.m"\n  xmlns:l="sap.ui.layout"\n  xmlns:f="sap.ui.layout.form"\n  xmlns:u="sap.ui.unified"\n  xmlns:core="sap.ui.core"><Bar id="_IDGenBar" class="headerBox"><contentLeft><Image id="_IDGenImage" src="img/Logo.png" class="circularLogo"/><Link id="_IDGenLink" text="{i18n>title}" class="customTitleLink" press="onEmpList"/></contentLeft><contentRight><Button id="inputForm" text="{i18n>inputForm}" press="onInputForm" class="customButtonPrimary" visible="{= !!${userLoginModel>/roles/Admin} }"/><Button id="_IDGenButton3" text="{i18n>empList}" press="onEmpList" class="customButtonPrimary sapUiTinyMarginBegin"/></contentRight></Bar></core:FragmentDefinition>\n'
});
//# sourceMappingURL=Component-preload.js.map
