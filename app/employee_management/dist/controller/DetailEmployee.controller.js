sap.ui.define(["sap/ui/core/mvc/Controller","../model/models","sap/ui/core/Fragment"],function(e,t,a){"use strict";return e.extend("employeemanagement.controller.DetailEmployee",{onInit:function(){const e=this.getOwnerComponent().getRouter();e.getRoute("DetailEmployee").attachPatternMatched(this._onRouteMatched,this);this._bEditMode=false;this._oOriginalData=null;this._validateDobCheck=true;this._validateHireCheck=true},_onRouteMatched:async function(e){const t=e.getParameter("arguments").id;const a=this.getOwnerComponent().getModel("EmployeeModel");const s=`/Employees('${t}')`;try{const e=a.bindContext(s,undefined,{parameters:{$expand:"role,department"}});const t=await e.requestObject();if(t){let e=this.getView().getModel("EmployeeDetail");const a=new sap.ui.model.json.JSONModel(t);this.getView().setModel(a,"EmployeeDetail")}else{sap.m.MessageToast.show("Employee not found.")}}catch(e){console.error("Failed to load employee:",e);sap.m.MessageBox.error("Error loading employee data.")}},onInputForm:function(e){this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false);const t=this.getOwnerComponent().getRouter();t.navTo("CreateEmployee")},onEmpList:function(e){this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false);const t=this.getOwnerComponent().getRouter();t.navTo("OverviewPage")},onMasterData:function(){this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false);const e=this.getOwnerComponent().getRouter();e.navTo("MasterDataPage")},onEditPress:function(){this._bEditMode=true;const e=this.getView();this._oOriginalData=JSON.parse(JSON.stringify(e.getModel("EmployeeDetail").getData()));this._setValidateCheck();this._setInputsEditable(true);this._toggleButtons(true)},_setValidateCheck:function(){this._validateDobCheck=true;this._validateHireCheck=true},onCancelPress:function(){this._bEditMode=false;const e=this.getView();e.getModel("EmployeeDetail").setData(this._oOriginalData);this._setInputsEditable(false);this._toggleButtons(false)},validateDOB:function(e){const t=e.getSource();const a=e.getParameter("value");if(!a){t.setValueState("Error");t.setValueStateText("Date of Birth is required.");this._validateDobCheck=false;return}const s=new Date(a);const o=new Date;if(isNaN(s.getTime())){t.setValueState("Error");t.setValueStateText("Invalid date format. Please enter a valid date.");this._validateDobCheck=false;return}let i=o.getFullYear()-s.getFullYear();const l=o.getMonth()-s.getMonth();const n=o.getDate()-s.getDate();if(l<0||l===0&&n<0){i--}if(i<18){t.setValueState("Error");t.setValueStateText("Employee must be at least 18 years old.");this._validateDobCheck=false}else{t.setValueState("None");t.setValueStateText("");this._validateDobCheck=true}},validateHireDate:function(e){const t=e.getSource();const a=e.getParameter("value");if(!a){t.setValueState("Error");t.setValueStateText("Hire Date is required.");this._validateHireCheck=false;return}const s=new Date(a);if(isNaN(s.getTime())){t.setValueState("Error");t.setValueStateText("Invalid Hire Date format.");this._validateHireCheck=false;return}const o=new Date;o.setHours(0,0,0,0);if(s>o){t.setValueState("Error");t.setValueStateText("Hire Date cannot be in the future.");this._validateHireCheck=false}else{t.setValueState("None");t.setValueStateText("");this._validateHireCheck=true}},_validateRequiredFields:function(){const e=this.getView();let t=true;const a=[e.byId("name"),e.byId("name2"),e.byId("gender"),e.byId("dob"),e.byId("department"),e.byId("hireDate"),e.byId("role"),e.byId("email")];a.forEach(function(e){const a=e.getValue?.()||e.getSelectedKey?.();if(!a){e.setValueState("Error");e.setValueStateText("This field is required");t=false}else{e.setValueState("None")}});return t},onEmailChange:function(e){const t=e.getParameter("value").trim();const a=e.getSource();const s=this._validateEmail(t);if(!s){a.setValueState("Error");a.setValueStateText("Please enter a valid email address.")}else{a.setValueState("None")}},_validateEmail:function(e){const t=/^[^\s@]+@[^\s@]+\.[^\s@]+$/;return t.test(e)},onValidateEmail:async function(){const e=this.byId("email").getValue().trim();const t=this.getView().getModel("EmployeeDetail");const a=t.getProperty("/ID");const s=this.getOwnerComponent().getModel("EmployeeModel");let o=false;try{const t=await s.bindList("/Employees").requestContexts();const i=t.some(t=>{const s=t.getObject();return s.email?.toLowerCase()===e.toLowerCase()&&s.ID!==a});if(i){this.byId("email").setValueState("Error");this.byId("email").setValueStateText("This email already exists.");sap.m.MessageToast.show("This email already exists.");o=false;return o}else{this.byId("email").setValueState("None");o=true;return o}}catch(e){console.error("Failed to read employees",e);sap.m.MessageToast.show("Failed to check existing emails.");o=false;return o}},onUpdatePress:async function(){const e=this.getView();const t=this._validateRequiredFields();if(!t){sap.m.MessageToast.show("Please fill all required fields.");return}if(!this._validateDobCheck){sap.m.MessageToast.show("Invalid Date of Birth field.");return}if(!this._validateHireCheck){sap.m.MessageToast.show("Invalid Hire Date field.");return}const a=e.byId("email").getValue().trim();const s=this._validateEmail(a);if(!s){const t=e.byId("email");t.setValueState("Error");t.setValueStateText("Please enter a valid email address.");sap.m.MessageToast.show("Please enter a valid email address.");return}else{e.byId("email").setValueState("None")}const o=await this.onValidateEmail();if(!o){return}this.onCalculateSalary();this._openConfirmDialog({title:"Confirm Update",message:"Are you sure you want to update this employee?",state:"Information",confirmText:"Update",cancelText:"Cancel"})},_openConfirmDialog:function(e){if(!this._oConfirmDialog){a.load({id:this.getView().getId(),name:"employeemanagement.view.fragment.ConfirmDialog",controller:this}).then(function(t){this._oConfirmDialog=t;this.getView().addDependent(t);this._setDialogProperties(e);t.open()}.bind(this))}else{this._setDialogProperties(e);this._oConfirmDialog.open()}},_setDialogProperties:function(e){const t=new sap.ui.model.json.JSONModel({dialogTitle:e.title,dialogMessage:e.message,dialogState:e.state,confirmText:e.confirmText,cancelText:e.cancelText});this._oConfirmDialog.setModel(t,"dialog")},_handleEmployeeUpdate:async function(){const e=this.getView();const t=e.getModel("EmployeeDetail");const a=t.getData();const s=a.ID;if(!s){throw new Error("Employee ID is required.")}delete a.ID;delete a.createdAt;delete a.__metadata;delete a.departmentName;delete a.roleName;delete a.createdBy;delete a.modifiedAt;delete a.modifiedBy;if(a.dateOfBirth){const e=new Date(a.dateOfBirth);if(!isNaN(e)){a.dateOfBirth=e.toISOString().slice(0,10)}else{console.warn("Invalid dateOfBirth:",a.dateOfBirth)}}if(a.hireDate){const e=new Date(a.hireDate);if(!isNaN(e)){a.hireDate=e.toISOString().slice(0,10)}else{console.warn("Invalid hireDate:",a.hireDate)}}try{const e=`/odata/v4/employee/Employees('${s}')`;const t=await fetch(e,{method:"PATCH",headers:{"Content-Type":"application/json"},body:JSON.stringify(a)});if(!t.ok){const e=await t.text();throw new Error(`Update failed (${t.status}): ${e}`)}sap.m.MessageToast.show("Employee updated successfully");const o=sap.ui.getCore().byId("container-employeemanagement---OverviewPage--employeeTable");if(o){const e=o.getBinding("items");e?.refresh()}}catch(e){console.error("Failed to update employee:",e);sap.m.MessageBox.error("Failed to update employee:\n"+(e.message||""))}this._refreshEmployeeDetail(s);this._bEditMode=false;this._setInputsEditable(false);this._toggleButtons(false)},onConfirm:function(){this._handleEmployeeUpdate();this._oConfirmDialog.close()},onCancel:function(){this._oConfirmDialog.close()},_setInputsEditable:function(e){const t=this.getView();["name","name2","dob","gender","department","hireDate","role","email"].forEach(a=>{const s=t.byId(a);if(s&&s.setEditable){s.setEditable(e)}})},_toggleButtons:function(e){const t=this.getView();t.byId("btnEdit").setVisible(!e);t.byId("btnUpdate").setVisible(e);t.byId("btnCancel").setVisible(e);t.byId("btnCalculateSalary").setEnabled(e)},_refreshEmployeeDetail:async function(e){try{const t=this.getView();const a=t.getModel("EmployeeModel");const s=`/Employees('${e}')`;const o=a.bindContext(s);const i=await o.requestObject();t.getModel("EmployeeDetail").setData(i)}catch(e){console.error("Failed to refresh employee details",e);sap.m.MessageBox.error("Failed to refresh employee details.")}},onRoleChange:function(e){const t=e.getSource();const a=t.getValue().trim();const s=t.getItems();let o=false;let i=null;for(let e=0;e<s.length;e++){const t=s[e];if(t.getText().toLowerCase()===a.toLowerCase()){o=true;i=t.getKey();break}}if(o){t.setValueState("None");t.setSelectedKey(i)}else{t.setValueState("Error");t.setValueStateText("Invalid selected. Please choose from the list.");t.setSelectedKey("")}},onCalculateSalary:function(){const e=this.getView();const t=e.byId("role");const a=e.byId("hireDate");const s=t.getSelectedKey();const o=a.getDateValue();if(!s||!o){sap.m.MessageBox.information("Please select a role and hire date.");return}const i=this.getView().getModel("MasterDataModel").getProperty("/roles");const l=i.find(e=>e.ID===s);if(!l){sap.m.MessageBox.information("Selected role not found.");return}const n=parseFloat(l.baseSalary||0);const r=new Date;let d=r.getFullYear()-o.getFullYear();const c=r.getMonth()-o.getMonth();const u=r.getDate()-o.getDate();if(c<0||c===0&&u<0){d--}const h=d*1e3;const g=n+h;const m=this.getView().getModel("EmployeeDetail");m.setProperty("/salary",g.toFixed(2))}})});
//# sourceMappingURL=DetailEmployee.controller.js.map